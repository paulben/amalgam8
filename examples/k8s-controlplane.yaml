# Copyright 2016 IBM Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# Redis datastore backend for Amalgam8 Controller
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    name: redis
  type: NodePort
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
---
##################################################################################################
# Amalgam8 Controller service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: controller
spec:
  ports:
  - port: 6080
    targetPort: 8080
    nodePort: 31200
    protocol: TCP
  selector:
    name: controller
  type: NodePort
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: controller
    spec:
      containers:
      - name: controller
        image: amalgam8/a8-controller
        imagePullPolicy: IfNotPresent
        env:
        - name: A8_LOG_LEVEL
          value: info
        - name: A8_DATABASE_TYPE
          value: redis
        - name: A8_DATABASE_HOST
          value: redis://$(REDIS_SERVICE_HOST):$(REDIS_SERVICE_PORT)
        ports:
        - containerPort: 8080
          name: http
---
##################################################################################################
# ELK Stack
##################################################################################################
apiVersion: v1
kind: Service
metadata: 
  name: logserver
spec:
  ports: 
    - 
      name: kibana
      nodePort: 30500
      port: 5601
      protocol: TCP
      targetPort: 5601
    - 
      name: es1
      nodePort: 30200
      port: 9200
      protocol: TCP
      targetPort: 9200
    - 
      name: es2
      port: 9300
      protocol: TCP
      targetPort: 9300
    - 
      name: logstashport
      port: 8092
      protocol: TCP
      targetPort: 8092
  selector: 
    name: logserver
  type: NodePort
---
    
apiVersion: v1
kind: ReplicationController
metadata:
  name: logserver
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: logserver
    spec:
      containers:
      - name: es
        image: elasticsearch
        ports:
        - containerPort: 9200
        - containerPort: 9300
      - name: logstash
        image: logstash
        command: [ "logstash", "--verbose", "-e", "input { beats {codec=>'json' port=>8092}} output {elasticsearch {hosts =>'localhost:9200' codec=>'json'} } "]
        ports:
        - containerPort: 8092
      - name: kibana
        image: kibana
        ports:
        - containerPort: 5601
        env:
        - name: ELASTICSEARCH_URL
          value: "http://localhost:9200"

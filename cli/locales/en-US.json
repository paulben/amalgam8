[
  {
    "id": "app_name",
    "translation": "a8"
  },
  {
    "id": "app_usage",
    "translation": "Amalgam8 CLI"
  },
  {
    "id": "app_version",
    "translation": "0.0.1"
  },
  {
    "id": "debug_usage",
    "translation": "Show REST communication with Amalgam8 Controller as it is performed."
  },
  {
    "id": "json_usage",
    "translation": "Show output in JSON format"
  },
  {
    "id": "yaml_usage",
    "translation": "Show output in YAML format"
  },
  {
    "id": "invalid_url",
    "translation": "Invalid URL or empty."
  },
  {
    "id": "registry_url_usage",
    "translation": "Registry URL"
  },
  {
    "id": "registry_token_usage",
    "translation": "Registry Token"
  },
  {
    "id": "controller_url_usage",
    "translation": "Controller URL"
  },
  {
    "id": "request_completed",
    "translation": "Request Completed"
  },
  {
    "id": "info_name",
    "translation": "info"
  },
  {
    "id": "info_description",
    "translation": "Shows information about the configuration of the CLI."
  },
  {
    "id": "info_usage",
    "translation": "Shows information about the configuration of the CLI."
  },
  {
    "id": "rule_deleted",
    "translation": "Rule Deleted"
  },
  {
    "id": "service_list_name",
    "translation": "service-list"
  },
  {
    "id": "service_list_description",
    "translation": "List managed microservices."
  },
  {
    "id": "service_list_usage",
    "translation": "List managed microservices."
  },
  {
    "id": "service_list_output_usage",
    "translation": "Output format. Supported values are 'json', 'yaml' or 'table'."
  },
  {
    "id": "route_list_name",
    "translation": "route-list"
  },
  {
    "id": "route_list_description",
    "translation": "List microservices version routing rules."
  },
  {
    "id": "route_list_usage",
    "translation": "List microservices version routing rules."
  },
  {
    "id": "route_list_service_usage",
    "translation": "The service name."
  },
  {
    "id": "route_list_output_usage",
    "translation": "Output format. Supported values are 'json', 'yaml' or 'table'."
  },
  {
    "id": "action_list_name",
    "translation": "action-list"
  },
  {
    "id": "action_list_description",
    "translation": "List action rules."
  },
  {
    "id": "action_list_usage",
    "translation": "List action rules."
  },
  {
    "id": "action_list_service_usage",
    "translation": "The service name."
  },
  {
    "id": "action_list_output_usage",
    "translation": "Output format. Supported values are 'json', 'yaml' or 'table'."
  },
  {
    "id": "rule_create_name",
    "translation": "rule-create"
  },
  {
    "id": "rule_create_description",
    "translation": "Set rules for a microservice."
  },
  {
    "id": "rule_create_usage",
    "translation": "Set rules for a microservice."
  },
  {
    "id": "rule_create_file_usage",
    "translation": "Read a JSON or YAML file containing a description of rules to create. Reads from stdin by default."
  },
  {
    "id": "rule_create_input_redirection_usage",
    "translation": "Read rules from an input redirection."
  },
  {
    "id": "rule_update_name",
    "translation": "rule-update"
  },
  {
    "id": "rule_update_description",
    "translation": "Update rules for a microservice."
  },
  {
    "id": "rule_update_usage",
    "translation": "Update rules for a microservice."
  },
  {
    "id": "rule_update_file_usage",
    "translation": "Read a JSON or YAML file containing a description of rules to update. Reads from stdin by default."
  },
  {
    "id": "rule_update_input_redirection_usage",
    "translation": "Read rules from an input redirection."
  },
  {
    "id": "rule_get_name",
    "translation": "rule-get"
  },
  {
    "id": "rule_get_description",
    "translation": "Get rules for a microservice."
  },
  {
    "id": "rule_get_usage",
    "translation": "Get rules for a microservice."
  },
  {
    "id": "rule_get_id_usage",
    "translation": "The rule id."
  },
  {
    "id": "rule_get_tag_usage",
    "translation": "The rule tag."
  },
  {
    "id": "rule_get_destination_usage",
    "translation": "The rule destination."
  },
  {
    "id": "rule_get_output_usage",
    "translation": "Output format. Supported values are 'json' or 'yaml'."
  },
  {
    "id": "rule_get_all_usage",
    "translation": "Output all rules."
  },
  {
    "id": "rule_delete_name",
    "translation": "rule-delete"
  },
  {
    "id": "rule_delete_usage",
    "translation": "Delete rules from a microservice."
  },
  {
    "id": "rule_delete_description",
    "translation": "Delete rules with the specified rule id, tag, or destination."
  },
  {
    "id": "rule_delete_id_usage",
    "translation": "The rule id."
  },
  {
    "id": "rule_delete_tag_usage",
    "translation": "The rule tag."
  },
  {
    "id": "rule_delete_destination_usage",
    "translation": "The rule destination."
  },
  {
    "id": "rule_delete_all_usage",
    "translation": "All rules."
  },
  {
    "id": "rule_delete_all_force_usage",
    "translation": "Force deletion without confirmation."
  },
  {
    "id": "rule_delete_all_confirmation",
    "translation": "Do you really want to delete all rules?"
  },
  {
    "id": "traffic_start_name",
    "translation": "traffic-start"
  },
  {
    "id": "traffic_start_description",
    "translation": "Start transferring traffic to a new version of a microservice."
  },
  {
    "id": "traffic_start_usage",
    "translation": "Start transferring traffic to a new version of a microservice."
  },
  {
    "id": "traffic_start_service_usage",
    "translation": "The service name."
  },
  {
    "id": "traffic_start_version_usage",
    "translation": "The new version to traffic."
  },
  {
    "id": "traffic_start_output_usage",
    "translation": "A percentage of traffic 0-100 to send to the new version."
  },
  {
    "id": "traffic_step_name",
    "translation": "traffic-step"
  },
  {
    "id": "traffic_step_description",
    "translation": "Step up the amount of traffic to a new version of a microservice."
  },
  {
    "id": "traffic_step_usage",
    "translation": "Step up the amount of traffic to a new version of a microservice."
  },
  {
    "id": "traffic_step_service_usage",
    "translation": "The service name."
  },
  {
    "id": "traffic_step_amount_usage",
    "translation": "A percentage of traffic 0-100 to send to the new version."
  },
  {
    "id": "traffic_abort_name",
    "translation": "traffic-abort"
  },
  {
    "id": "traffic_abort_description",
    "translation": "Abort transferring traffic to a new version of a microservice."
  },
  {
    "id": "traffic_abort_usage",
    "translation": "Abort transferring traffic to a new version of a microservice."
  },
  {
    "id": "traffic_abort_service_usage",
    "translation": "The service name."
  },
  {
    "id": "recipe_run_name",
    "translation": "recipe-run"
  },
  {
    "id": "recipe_run_usage",
    "translation": "Setup a failure scenario and assertion to test against the application."
  },
  {
    "id": "recipe_run_description",
    "translation": "Setup a failure scenario and assertion to test against the application."
  },
  {
    "id": "recipe_run_topology_usage",
    "translation": "The application's logical topology."
  },
  {
    "id": "recipe_run_scenarios_usage",
    "translation": "The failure scenarios."
  },
  {
    "id": "recipe_run_checks_usage",
    "translation": "Validations on the behavior of the microservices during the failure."
  },
  {
    "id": "recipe_run_load_script_usage",
    "translation": "Script to inject test load into the application."
  },
  {
    "id": "recipe_run_header_usage",
    "translation": "Specify the request tracking header used by the application."
  },
  {
    "id": "recipe_run_pattern_usage",
    "translation": "Select only requests whose request tracking header matches the pattern."
  },
  {
    "id": "recipe_run_output_usage",
    "translation": "Output format. Supported values are 'json' or 'yaml'."
  },
  {
    "id": "recipe_run_wait_usage",
    "translation": "Time to wait before checking the results. Supported time units are 'ms', 's', 'm'."
  },
  {
    "id": "recipe_run_force_usage",
    "translation": "Skip the keyboard input."
  }
]
